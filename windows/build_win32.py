import os
import sys
import shutil
import glob
import datetime
import subprocess
import distutils.dir_util

sys.path.append(".")
from zim import __version__

# For the complete Windows build procedure, please read
# README-BUILD-win32.txt

#  Clean up the build directory
shutil.rmtree("windows/build", True)

# create main.exe and any files generated by setup.py
subprocess.check_call(['python.exe', 'setup.py', 'build'])
subprocess.check_call(['python.exe', 'setup.py', 'py2exe'])

# update "data" folder
shutil.copytree("data", "windows/build/data")

# Use function from distutils because shutil.copytree 
# fails when destination folder exists

# If you installed GTK to a different folder, change these lines:
distutils.dir_util.copy_tree("c:/Program Files/Common Files/GTK/2.22/etc", "windows/build/etc", update=1)
distutils.dir_util.copy_tree("c:/Program Files/Common Files/GTK/2.22/lib", "windows/build/lib", update=1)
distutils.dir_util.copy_tree("c:/Program Files/Common Files/GTK/2.22/share", "windows/build/share", update=1)
shutil.rmtree("windows/build/share/doc", True)
shutil.rmtree("windows/build/share/gtk-doc", True)
files = glob.iglob(os.path.join("c:/Program Files/Common Files/GTK/2.22/bin", "*.exe"))
for file in files:
    if os.path.isfile(file):
        shutil.copy2(file, "windows/build")

# Copy icon files
distutils.dir_util.copy_tree("icons", "windows/build/icons", update=1)

# Copy translation files
distutils.dir_util.copy_tree("locale", "windows/build/locale", update=1)

# Copy plugins folder so Preferences dialog can iterate through them
distutils.dir_util.copy_tree("zim/plugins", "windows/build/zim/plugins", update=1)

# Copy the hicolor icon theme from windows folder because it's missing from Gtk/win32 distro
if not os.path.exists("windows/build/share/icons/hicolor"):
	os.makedirs("windows/build/share/icons/hicolor")
shutil.copyfile(
	"windows/hicolor-icon-theme__index.theme",
	"windows/build/share/icons/hicolor/index.theme"
)

# Copy jpeg62.dll
shutil.copyfile("windows/jpeg62.dll", "windows/build/jpeg62.dll")

# print out version number
f = open("windows/version-and-date.nsi", "w")
f.write('!define VER "%s"\n' % __version__)
f.write('!define BUILDDATE "%s"\n' % datetime.datetime.now().strftime("%Y-%m-%d"))
f.close()

# NSIS script compiles to "dist" folder but compiler won't create it if it's needed
if not os.path.exists("dist"):
    os.mkdir("dist")
