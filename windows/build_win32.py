import os
import sys
import shutil
import glob
import datetime
import subprocess
import distutils.dir_util
from distutils.sysconfig import get_python_lib

sys.path.append(".")
from zim import __version__

BUILD = "windows/build"
PORTABLE = BUILD + "/ZimDesktopWikiPortable"
PORTABLE_EXE = PORTABLE + "/App/ZimDesktopWiki"

# For the complete Windows build procedure, please read
# README-BUILD-win32.txt

#  Clean up the build directory
shutil.rmtree("windows/build", True)
os.makedirs(PORTABLE_EXE)

# create main.exe and any files generated by setup.py
subprocess.check_call(['python.exe', 'setup.py', 'build'])
subprocess.check_call(['python.exe', 'setup.py', 'py2exe'])

# update "data" folder
shutil.copytree("data", PORTABLE_EXE + "/data")

shutil.copy2(get_python_lib() + "/gtk-2.0/runtime/bin/gspawn-win32-helper.exe", PORTABLE_EXE)

# Use function from distutils because shutil.copytree 
# fails when destination folder exists

# Copy icon files
distutils.dir_util.copy_tree("icons", PORTABLE_EXE + "/icons", update=1)

# Copy translation files
distutils.dir_util.copy_tree("locale", PORTABLE_EXE + "/locale", update=1)

# Copy plugins folder so Preferences dialog can iterate through them
distutils.dir_util.copy_tree("zim/plugins", PORTABLE_EXE + "/zim/plugins", update=1)

# Copy the hicolor icon theme from windows folder because it's missing from Gtk/win32 distro
if not os.path.exists(PORTABLE_EXE + "/share/icons/hicolor"):
	os.makedirs(PORTABLE_EXE + "/share/icons/hicolor")
shutil.copyfile(
	"windows/src/hicolor-icon-theme__index.theme",
	PORTABLE_EXE + "/share/icons/hicolor/index.theme"
)

# Copy jpeg62.dll
shutil.copy2("windows/jpeg62.dll", PORTABLE_EXE)

# print out version number
f = open("windows/build/version-and-date.nsi", "w")
f.write('!define VER "%s"\n' % __version__)
f.write('!define BUILDDATE "%s"\n' % datetime.datetime.now().strftime("%Y-%m-%d"))
f.close()

# NSIS script compiles to "dist" folder but compiler won't create it if it's needed
if not os.path.exists("dist"):
    os.mkdir("dist")


# Fill out PortableApps.com installer skeleton
distutils.dir_util.copy_tree("windows/src/AppInfo", PORTABLE + "/App/AppInfo", update=1)
os.makedirs(PORTABLE + "/App/DefaultData/Config/zim")
os.makedirs(PORTABLE + "/App/DefaultData/Notebooks")
distutils.dir_util.copy_tree("windows/src/Other", PORTABLE + "/Other", update=1)
shutil.copy2("windows/src/prepare_notebook_list.js", PORTABLE_EXE)
shutil.copyfile(
	"windows/src/zim.ico",
	PORTABLE + "/App/AppInfo/appicon.ico"
)
shutil.copyfile(
	"icons/zim16.png",
	PORTABLE + "/App/AppInfo/appicon_16.png"
)
shutil.copyfile(
	"icons/zim32.png",
	PORTABLE + "/App/AppInfo/appicon_32.png"
)
shutil.copy2("windows/src/help.html", PORTABLE)
f = open(PORTABLE + "/App/AppInfo/appinfo.ini", "a")
f.write("[Version]\n")
f.write("PackageVersion=%s.0.0\n" % __version__)
f.write("DisplayVersion=%s\n" % __version__)
f.close()