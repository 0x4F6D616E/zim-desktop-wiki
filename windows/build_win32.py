# --------------------------------------------------------------------
# For the complete Windows build procedure, please read
# README-BUILD-win32.txt .
#
# Some general advice for building PyGTK-based Windows .EXEs can be
# found here:
# http://www.no-ack.org/2010/09/complete-guide-to-py2exe-for-pygtk.html
# --------------------------------------------------------------------

import os
from os import path
import sys
import shutil
import glob
import datetime
import subprocess
import distutils.dir_util
from distutils.sysconfig import get_python_lib

# load version number constant from zim package
sys.path.append(".")
from zim import __version__

# contants for this script
#
# windows
#   /build                      BUILD_ROOT
#     /ZimDesktopWikiPortable   APP_ROOT
#       /App
#         /ZimDesktopWiki       EXE_ROOT
#
BUILD_ROOT = r"windows\build"
APP_ROOT = path.join(BUILD_ROOT, "ZimDesktopWikiPortable")
EXE_ROOT = path.join(APP_ROOT, r"App\ZimDesktopWiki")

#GTK_ROOT = path.join(get_python_lib(), r"gtk-2.0\runtime")
for libdir in os.environ["PATH"].split(path.pathsep):
	if path.exists(path.join(libdir, "libgtk-win32-2.0-0.dll")):
		GTK_ROOT = path.dirname(libdir)

# --------------------------------------
# BUILD
# --------------------------------------

# Clean up and initialize the build directory
shutil.rmtree(BUILD_ROOT, True)
os.makedirs(EXE_ROOT)

# Create main zim.exe and any files generated by setup.py
subprocess.check_call(['python.exe', 'setup.py', 'build'])
subprocess.check_call(['python.exe', 'setup.py', 'py2exe'])

# Copy GTK runtime
for d in ["etc", "lib", "share"]:
	distutils.dir_util.copy_tree(path.join(GTK_ROOT, d), path.join(EXE_ROOT, d), update=1)
for ext in ["*.exe", "*.dll"]:
	files = glob.iglob(os.path.join(GTK_ROOT, "bin", ext))
	for file in files:
	    if os.path.isfile(file):
        	shutil.copy(file, EXE_ROOT)
os.remove(os.path.join(EXE_ROOT, "gtk-demo.exe"))

# Remove docs from copied GTK runtime
shutil.rmtree(path.join(EXE_ROOT, r"share\doc"), True)
shutil.rmtree(path.join(EXE_ROOT, r"share\gtk-doc"), True)

# Load Zim's data folder
shutil.copytree("data", path.join(EXE_ROOT, "data"))

# Copy icon files
distutils.dir_util.copy_tree("icons", path.join(EXE_ROOT, "icons"), update=1)

# Copy translation files
distutils.dir_util.copy_tree("locale", path.join(EXE_ROOT, "locale"), update=1)

# Copy plugins folder so Preferences dialog can iterate through them
distutils.dir_util.copy_tree(r"zim\plugins", path.join(EXE_ROOT, r"zim\plugins"), update=1)

# Copy the hicolor icon theme from windows folder because it's missing from Gtk/win32 distro
p = path.join(EXE_ROOT, r"share\icons\hicolor")
if not path.exists(p): os.makedirs(p)
shutil.copy(
	r"windows\src\hicolor-icon-theme__index.theme",
	path.join(EXE_ROOT, r"share\icons\hicolor\index.theme")
)

# Copy jpeg62.dll
shutil.copy(r"windows\jpeg62.dll", EXE_ROOT)

# Set theme to MS-Windows
f = open(os.path.join(EXE_ROOT, r"etc\gtk-2.0\gtkrc"), "w")
print >>f, 'gtk-theme-name = "MS-Windows"'
f.close()

# --------------------------------------
# NSIS STUFF
# --------------------------------------

# print out version number to NSIS include file
f = open(r"windows\build\version-and-date.nsi", "w")
print >>f, '!define VER "%s"' % __version__
print >>f, '!define BUILDDATE "%s"' % datetime.datetime.now().strftime("%Y-%m-%d")
f.close()

# NSIS script compiles to "dist" folder but compiler won't create it if it's needed
if not path.exists("dist"): os.mkdir("dist")

# --------------------------------------
# PORTABLEAPPS.COM STUFF
# --------------------------------------

# Fill out PortableApps.com installer skeleton
distutils.dir_util.copy_tree(r"windows\src\AppInfo", path.join(APP_ROOT, r"App\AppInfo"), update=1)
os.makedirs(path.join(APP_ROOT, r"App\DefaultData\Config\zim"))
os.makedirs(path.join(APP_ROOT, r"App\DefaultData\Notebooks"))
distutils.dir_util.copy_tree(r"windows\src\Other", path.join(APP_ROOT, "Other"), update=1)
shutil.copy(r"windows\src\prepare_notebook_list.js", EXE_ROOT)
shutil.copy(r"windows\src\zim.ico",                  path.join(APP_ROOT, r"App\AppInfo\appicon.ico"))
shutil.copy(r"icons\zim16.png",                      path.join(APP_ROOT, r"App\AppInfo\appicon_16.png"))
shutil.copy(r"icons\zim32.png",                      path.join(APP_ROOT, r"App\AppInfo\appicon_32.png"))
shutil.copy(r"windows\src\help.html",                APP_ROOT)

# Add version number to appinfo.ini
f = open(path.join(APP_ROOT, r"App\AppInfo\appinfo.ini"), "a")
print >>f ,"[Version]"
print >>f, "PackageVersion=%s.0.0" % __version__
print >>f, "DisplayVersion=%s\n" % __version__
f.close()
